import { useState, useEffect } from 'react';  
import './App.css';  

interface TodoItem {  
  id: number;  
  title: string;  
  created_at: string;  
  update_at: string;  
  isCompleted: boolean;  
}  

function App() {  
  const [data, setData] = useState<TodoItem[] | string>([]);  
  const [isLoading, setIsLoading] = useState(false);  

  useEffect(() => {  
    const fetchData = async () => {  
      setIsLoading(true);  
      try {  
        const response = await fetch('http://127.0.0.1:8000/admin/todos/');  
        const contentType = response.headers.get('Content-Type');  

        if (contentType?.includes('application/json')) {  
          const jsonData: TodoItem[] = await response.json();  
          setData(jsonData);  
        } else {  
          // Assume the response is HTML and display an error message  
          const responseText = await response.text();  
          setData(`Error: The server returned an unexpected response:\n${responseText}`);  
        }  
      } catch (error) {  
        console.error('Error fetching data:', error);  
        setData('Error fetching data. Please try again later.');  
      } finally {  
        setIsLoading(false);  
      }  
    };  
    fetchData();  
    console.log(data)
  }, [data]);  

  return (  
    <>  
      {isLoading ? (  
        <div>Loading...</div>  
      ) : typeof data === 'string' ? (  
        <div>{data}</div>  
      ) : (  
        <div>  
          {data.map((item, index) => (  
            <div key={index}>  
              <p>{item.title}</p>  
              <p>{item.created_at}</p>  
              <p>{item.update_at}</p>  
              <p>Completed: {item.isCompleted.toString()}</p>  
            </div>  
          ))}  
        </div>  
      )}  
    </>  
  );  
}  

export default App;